steps:
- id: 'fetch-git'
  name: 'gcr.io/cloud-builders/git'
  args: ['fetch', '--tags', '--unshallow']

- id: 'clients-python-build'
  name: 'gcr.io/${PROJECT_ID}/olympia/services/auto:stable'
  args: ['/bin/bash', '-c', 'apt-get update && apt-get install -y git python3-venv && python3 -m pipx install --upgrade build && python3 -m build']
  dir: 'clients/python'
  waitFor: ['fetch-git']

- id: 'clients-python-publish'
  name: 'gcr.io/${PROJECT_ID}/olympia/services/auto:stable'
  args: ['/bin/bash', '-c', 'if [[ "${TAG_NAME}" != clients-python-* ]]; then echo "Skipping publishing client"; exit 0; fi; python3 -m pipx install twine --upgrade; twine upload dist/*']
  dir: 'clients/python'
  env:
  - "TWINE_USERNAME=__token__"
  - "TWINE_PASSWORD=pypi-${_PYPI_API_TOKEN}"
  waitFor: ['clients-python-build']

- id: 'images-jupyter-build'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/sust-dev-03/sustglobal-dev-center/jupyter-notebooks:${SHORT_SHA}', '-f', 'jupyter-notebooks/Dockerfile', '.']

- id: 'images-jupyter-push'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/sust-dev-03/sustglobal-dev-center/jupyter-notebooks:${SHORT_SHA}']

- id: 'images-jupyter-maybe-tag-latest'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args: ['-c', 'if [ "${BRANCH_NAME}" != "master" ]; then exit 0; fi; docker tag us-central1-docker.pkg.dev/sust-dev-03/sustglobal-dev-center/jupyter-notebooks:${SHORT_SHA} us-central1-docker.pkg.dev/sust-dev-03/sustglobal-dev-center/jupyter-notebooks:latest && docker push us-central1-docker.pkg.dev/sust-dev-03/sustglobal-dev-center/jupyter-notebooks:latest']
